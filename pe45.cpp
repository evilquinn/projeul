/*
 * pe45.cpp
 *
 *  Created on: 13 Jun 2015
 *      Author: evilquinn
 */

#include "pe45.hpp"
#include <ctype.h>
#include <stdio.h>
#include <boost/foreach.hpp>
#include <cmath>
#include <iostream>
#include <map>
#include <set>
#include "utils.hpp"

std::string& pe45::name() { return name_; }
void         pe45::run()
{
    /*
     * Triangle, pentagonal, and hexagonal numbers are generated by the
     * following formulae:
     * Triangle         Tn=n(n+1)/2         1, 3, 6, 10, 15, ...
     * Pentagonal       Pn=n(3n−1)/2        1, 5, 12, 22, 35, ...
     * Hexagonal        Hn=n(2n−1)          1, 6, 15, 28, 45, ...
     *
     * It can be verified that T285 = P165 = H143 = 40755.
     *
     * Find the next triangle number that is also pentagonal and hexagonal.
     *
     *
     */

    pentagonal_numbers pents_( PE45_NUM_PENTS );
    triangle_numbers   tris_( PE45_NUM_TRIS );
    hexagonal_numbers  hexs_( PE45_NUM_HEXS );
    size_t             result = 0;

    for ( size_t tris_pos = 286; tris_pos <= PE45_NUM_TRIS; ++tris_pos )
    {
        if ( pents_.is_pentagonal( tris_.get_term( tris_pos ) ) &&
             hexs_.is_hexagonal( tris_.get_term( tris_pos ) ) )
        {
            result = tris_.get_term( tris_pos );
        }
    }

    std::cout << "PE45 " << result << std::endl;
}
